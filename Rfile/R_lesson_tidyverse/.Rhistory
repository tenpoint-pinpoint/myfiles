rfm %>%
mutate(Ages =
case_when(Age < 30 ~ "20代",
Age < 40 ~ "30代",
Age < 50 ~ "40代",
Age < 60 ~ "50代",
TRUE ~ "その他"))
group_by(Ages, DM) %>% view()
rfm %>%
mutate(Ages =
case_when(Age < 30 ~ "20代",
Age < 40 ~ "30代",
Age < 50 ~ "40代",
Age < 60 ~ "50代",
TRUE ~ "その他"))
group_by(Ages, DM)
summarise(n = n()) %>%
spread(key = DM, value = n)
rfm %>%
mutate(Ages =
case_when(Age < 30 ~ "20代",
Age < 40 ~ "30代",
Age < 50 ~ "40代",
Age < 60 ~ "50代",
TRUE ~ "その他")) %>%
group_by(Ages, DM)
summarise(n = n()) %>%
spread(key = DM, value = n)
rfm %>%
mutate(Ages =
case_when(Age < 30 ~ "20代",
Age < 40 ~ "30代",
Age < 50 ~ "40代",
Age < 60 ~ "50代",
TRUE ~ "その他")) %>%
group_by(Ages, DM) %>%
summarise(n = n()) %>%
spread(key = DM, value = n)
# ------------------------------------------------------------------------------------------
# 練習問題
# ------------------------------------------------------------------------------------------
# データ読み込み
titanic <- read_csv("/Users/yoshikawahiroshi/Documents/R_lesson_tidyverse/R_lesson_3rd/titanic.csv")
View(titanic)
titanic %>%
miutate_at(Pclass, as.factor)
titanic %>%
mutate_at(Pclass, as.factor)
titanic %>%
mutate_at(titanic$Pclass, as.factor)
titanic %>%
mutate_at(titanic$Pclass, as.factor)
mutate_at(titanic$Survived, as.factor)
mutate_if(is.charactor,as.factor)
titanic %>%
mutate_at(titanic$Pclass, as.factor)
mutate_at(titanic$Survived, as.factor)
mutate_if(is.character,as.factor)
titanic %>%
mutate_at(titanic$Pclass, as.factor)
mutate_at(titanic$Survived, as.factor)
titanic %>%
mutate_at(titanic$Pclass, as.factor)
mutate_at(titanic$Survived, as.factor) %>%
mutate_if(is.character,as.factor)
titanic %>%
mutate_at(titanic$Pclass, as.factor)
mutate_at(titanic$Survived, as.factor) %>%
mutate_if(is.character, as.factor)
titanic %>%
mutate_at(titanic$Pclass, as.factor) %>%
mutate_at(titanic$Survived, as.factor) %>%
mutate_if(is.character, as.factor)
titanic %>%
select(-Name,-Cabin,-Ticket)
na.omit(titanic)
titanic%>%
na.omit()
titanic%>%
na.omit() %>% view()
titanic %>%
select(-PassengerId)
titanic %>%
select(-PassengerId) %>%
mutate_if(is.numeric, as.mean)
titanic %>%
select(-PassengerId) %>%
mutate_if(is.numeric, mean())
titanic %>%
select(-PassengerId) %>%
mutate_if(is.numeric, mean)
titanic %>%
select(-PassengerId, is.numeric) %>%
mutate_if(is.numeric, mean)
titanic
titanic %>%
select(-"PassengerId") %>%
summarize_if(is.numeric,mean)
titanic %>%
group_by(Pclass) %>%
select(-"PassengerId") %>%
summarize_if(is.numeric,mean)
titanic %>% group_by(Survived, Pclass) %>%
summarise(n = n()) %>%
spread(key = Pclass, vlue = n )
titanic %>% group_by(Survived, Pclass) %>%
summarise(n = n()) %>%
spread(key = Pclass, vlaue = n )
titanic %>% group_by(Survived, Pclass) %>%
summarise(n = n()) %>%
spread(key = Pclass, value = n )
titanic %>% group_by(Pclass, Survived) %>%
summarise(n = n()) %>%
spread(key = Pclass, value = n )
titanic %>% group_by(Pclass, Survived) %>%
summarise(n = n()) %>%
spread(key = Survived, value = n )
titanic %>% count(Pclass, Survived) %>% view()
titanic <- tally(titanic) %>%  view()
titanic <- tally(titanic) %>%
group_by(Pclass) %>% view()
titanic <- tally(titanic) %>%
spread(key = Pclass, value = value) %>% view()
titanic %>%
group_by(Pclass, Survived) %>%
tally() %>%
spread(key = Survived, value = n)
titanic %>%
group_by(Pclass, Survived) %>%
tally() %>%
spread(key = Survived, value = n)
titanic %>% group_by(Pclass, Survived) %>%
summarise(n = n()) %>%
spread(key = Survived, value = n )
titanic
View(titanic)
rfm <- read_csv("/Users/yoshikawahiroshi/Documents/R_lesson_tidyverse/R_lesson_3rd/RFM.csv")
titanic %>% group_by(Pclass, Survived) %>%
summarise(n = n()) %>%
spread(key = Survived, value = n )
titanic <- read_csv("/Users/yoshikawahiroshi/Documents/R_lesson_tidyverse/R_lesson_3rd/titanic.csv")
titanic %>% group_by(Pclass, Survived) %>%
summarise(n = n()) %>%
spread(key = Survived, value = n )
titanic %>%
group_by(Pclass, Survived) %>%
tally() %>%
spread(key = Survived, value = n)
titanic %>%
group_by(Pclass, Survived) %>%
tally() %>% view()
titanic %>%
group_by(Pclass, Survived) %>% view()
titanic %>% group_by(Pclass, Sex, Survived) %>%
tally() %>%
spread(key = Survived, value = n)
sales <- read_excel("/Users/yoshikawahiroshi/Documents/R_lesson_tidyverse/R_lesson_3rd/sales.xlsx")
View(sales)
salse %>%
mutate("新単価" = "単価" / 2)
sales %>%
mutate("新単価" = "単価" / 2)
mutate("新単価" = ("単価" / 2))
sales %>%
mutate("新単価" = ("単価"/2))
sales
sales %>%
mutate("新単価" = ("単価"/2))
sales %>%
mutate("新単価" = ("単価" + 100))
sales %>%
mutate("新単価" == ("単価"/2))
sales %>%
mutate("新単価" = "単価")
sales %>%
mutate("新単価" = ("単価")/2)
sales %>%
mutate(新単価 = 単価/2)
sales %>%
mutate("新単価" = 単価/2)
sales %>%
mutate("数量100" = is_else(数量 >= 100 , 1, 0))
sales %>%
mutate("数量100" = if_else(数量 >= 100 , 1, 0))
sales %>%
mutate("数量100.50" = case_when(
数量 >= 100 ~ 2,
数量 >=50 ~ 1
TRUE ~ 0))
sales %>%
mutate("数量100.50" = case_when(
数量 >= 100 ~ 2,
数量 >= 50 ~ 1,
TRUE ~ 0))
sales %>%
mutate("新単価" = 単価/2) %>%
select(新単価)
sales %>% rownames_to_column("ID")
library(tidyverse)
mpg_group <- mpg
View(mpg_group)
mpg <- mpg_group
mpg_group %>%
group_by(manufacturer, year)
mpg_group %>%
group_by(manufacturer, year) %>% view()
mpg_group %>%
group_by(manufacturer, year) %>%
filter(n() >= 20)
mpg_group %>%
group_by(manufacturer, year) %>%
filter(n() >= 20) view()
mpg_group %>%
group_by(manufacturer, year) %>%
filter(n() >= 20)  %>% view()
mpg_group %>%
group_by(manufacturer, year) %>%
filter(n() >= 20)  %>% view()
mpg_group %>%
group_by(manufacturer, year) %>%
filter(n() >= 20)
mpg_group %>%
group_by(manufacturer, year) %>%
filter(n() >= 10)
sales %>%
summarise(Av_tanka = mean(単価),
Av_suryo = mean(数量),
Av_kinga = mean(金額))
sales %>%
summarise(平均単価 = sqtr(var(単価)),
平均数量 = sqrt(var(数量)),
平均金額 = sqrt(var(金額)))
sales %>%
summarise(平均単価 = sqrt(var(単価)),
平均数量 = sqrt(var(数量)),
平均金額 = sqrt(var(金額)))
sales %>%
summarise(単価偏差= sqrt(var(単価)),
数量偏差 = sqrt(var(数量)),
金額偏差 = sqrt(var(金額)))
sales %>%
group_by(分類)
# (18) 変数"分類"でグループ化
sales %>%
group_by(分類) %>% view()
sales %>%
group_by(分類) %>%
summarise(Av_tanka = mean(単価),
Av_suryo = mean(数量),
Av_kinga = mean(金額))
sales %>% group_by(顧客名) %>%
select(顧客名, sum(金額))
sales %>% group_by(顧客名) %>%
select(顧客名, sum("金額"))
sales
# (20) 変数"顧客名"の値ごとに金額の合計を計算
sales %>% group_by(顧客名) %>%
select("顧客名", sum("金額"))
# (20) 変数"顧客名"の値ごとに金額の合計を計算
sales %>% group_by("顧客名") %>%
select("顧客名", sum("金額"))
sales %>% group_by("顧客名") %>%
summarise(合計 = sum(金額))
summarise(合計 = sum(金額)
# (20) 変数"顧客名"の値ごとに金額の合計を計算
sales %>% group_by("顧客名") %>%
summarise(合計 = sum(金額))
# (20) 変数"顧客名"の値ごとに金額の合計を計算
sales %>% group_by("顧客名") %>%
summarise(合計 = sum("金額"))
# (20) 変数"顧客名"の値ごとに金額の合計を計算
sales %>% group_by("顧客名") %>% view''
sales %>% group_by(顧客名) %>% view()
sales %>% group_by(顧客名) %>%
summarise(合計 = sum(金額))
sales %>%
mutate(flag1 = if_else(数量 >= 100,”100以上","100未満"))
sales %>%
mutate(flag1 = if_else(数量 >= 100, "100以上", "100未満")) %>%
group_by(flag1) %>%
summarise(平均単価, mean(単価))
# (21) 変数"数量"が100以上か100未満かでグループ化し、グループごとに変数"単価"の平均を計算
sales %>%
mutate(flag1 = if_else(数量 >= 100, "100以上", "100未満")) %>%
group_by(flag1) %>%
summarise(平均単価　＝ mean(単価))
sales %>%
mutate(flag1 = if_else(数量 >= 100, "100以上", "100未満"))
# (21) 変数"数量"が100以上か100未満かでグループ化し、グループごとに変数"単価"の平均を計算
sales %>%
mutate(flag1 = if_else(数量 >= 100, "100以上", "100未満")) %>%
group_by(flag1) %>%
summarise(平均単価 = mean(単価))
salese %>% group_by(販売エリア,分類) %>%
summarise(平均金額, mean(金額))
# (22) 変数"販売エリア"と変数"分類"でグループ化し、グループごとに変数"金額"の平均を計算
sales %>% group_by(販売エリア,分類) %>%
summarise(平均金額, mean(金額))
# (22) 変数"販売エリア"と変数"分類"でグループ化し、グループごとに変数"金額"の平均を計算
sales %>% group_by(販売エリア,分類) %>%
summarise(平均金額 = mean(金額))
# (23) 変数"単価"、"数量"、"金額"をtidy化
sales %>%
gather(sales, key = 単価金額数量, value = "数値", 単価,数量,金額 )
# (23) 変数"単価"、"数量"、"金額"をtidy化
sales %>%
gather(key = 単価金額数量, value = "数値", 単価,数量,金額 )
# (23) 変数"単価"、"数量"、"金額"をtidy化
sales %>%
gather(key = 単価金額数量, value = "数値", 単価,数量,金額 ) %>% view()
# (23) 変数"単価"、"数量"、"金額"をtidy化
sales %>%
gather(key = xxx, value = "数値", 単価,数量,金額 ) %>%
select(xxx)
# (23) 変数"単価"、"数量"、"金額"をtidy化
sales %>%
gather(key = xxx, value = "数値", 単価,数量,金額 ) %>%
select(xxx,数量)
# (23) 変数"単価"、"数量"、"金額"をtidy化
sales %>%
gather(key = xxx, value = "数値", 単価,数量,金額 ) %>%
select(xxx,数値)
# (23) 変数"単価"、"数量"、"金額"をtidy化
sales %>%
gather(key = xxx, value = "数値", 単価,数量,金額 ) %>%
select(xxx,数値) %>%view()
# (24) 変数"顧客名"、"支社名"、"商品名"をtidy化
sales %>%
gather(key = key,value = value, 支社名,商品名)
# (25) 変数"単価"、"数量"、"金額"の値を10倍する
salese %>%
mutate(単価10 = 単価*10, 数量10 = 数量*10, 金額10 = 金額*10)
# (25) 変数"単価"、"数量"、"金額"の値を10倍する
sales %>%
mutate(単価10 = 単価*10, 数量10 = 数量*10, 金額10 = 金額*10)
spread(key = key , value = value)
spread(key = key, value = value)
# (26) 変数"単価"、"数量"、"金額"の値を10の位で四捨五入する
sales %>%
gather(key = key, value = value, c(単価,数量,金額)) %>%
mutate(value = rount(value,-2)) %>%
spread(key = key, value = value)
# (26) 変数"単価"、"数量"、"金額"の値を10の位で四捨五入する
sales %>%
gather(key = key, value = value, c(単価,数量,金額)) %>%
mutate(value = round(value,-2)) %>%
spread(key = key, value = value)
# (27) 全ての変数の型を因子型に変換
seles %>%
mutate_all(as.factor)
# (27) 全ての変数の型を因子型に変換
sales %>%
mutate_all(as.factor)
# (28) 全ての文字列型の変数を因子型に変換
sales %>%
mutate_if(is.character, as.factor)
# (29) 数値型の変数全ての平均を計算
sales %>%
summarise_if(is.numeric,mean)
# (30) 変数"顧客名"と変数"商品名"のクロス集計表を作成
sales %>%
select(顧客名,商品名)
# (30) 変数"顧客名"と変数"商品名"のクロス集計表を作成
sales %>% group_by(顧客名,商品名)
# (30) 変数"顧客名"と変数"商品名"のクロス集計表を作成
sales %>% group_by(顧客名,商品名) %>%
summarise(n, n()) %>%
spread(key = 顧客名, value = n )
sales %>% group_by(顧客名,商品名) %>%
summarise(n, n())
# (30) 変数"顧客名"と変数"商品名"のクロス集計表を作成
sales %>% group_by(顧客名,商品名) %>%
summarise(n = n()) %>%
spread(key = 顧客名, value = n )
sales %>% count(顧客名, 商品名) %>%
spread(key = 商品名, value = n) %>%
mutate_at(vars(-顧客名), funs(ifelse(is.na(.), 0, .)))
sales %>% count(顧客名, 商品名) %>%
spread(key = 商品名, value = n) %>%
mutate_at(vars(-顧客名), funs(ifelse(is.na(.), 0, .)))
# (30) 変数"顧客名"と変数"商品名"のクロス集計表を作成
sales %>% group_by(顧客名,商品名) %>%
summarise(n = n()) %>%
spread(key = 商品名, value = n )
sales %>% group_by(顧客名, 商品名) %>%
tally() %>%
spread(key = 商品名, value = n) %>%
mutate_at(vars(-顧客名), funs(ifelse(is.na(.), 0, .)))
sales %>%
table(is.na(sales))
sales %>% is.na(sales)
sales %>% is.na(.,sales)
sales %>% group_by(顧客名,商品名) %>%
summarise(n = n()) %>%
spread(key = 商品名, value = n )
mutate_at(vars(-顧客名), funs(ifelse(is.na(.),0, .)))
sales %>% group_by(顧客名, 商品名) %>%
summarise(n = n()) %>%
spread(key = 商品名, value = n) %>%
mutate_at(vars(-顧客名), funs(ifelse(is.na(.), 0, .)))
sales %>% group_by(顧客名,商品名) %>%
summarise(n = n()) %>%
spread(key = 商品名, value = n )
mutate_at(vars(-顧客名), funs(ifelse(is.na(.),0, .)))
# (30) 変数"顧客名"と変数"商品名"のクロス集計表を作成
sales %>% group_by(顧客名,商品名) %>%
summarise(n = n()) %>%
spread(key = 商品名, value = n ) %>%
mutate_at(vars(-顧客名), funs(ifelse(is.na(.),0, .)))
# (31) 変数"販売エリア"と変数"分類"のクロス集計表を作成
sales %>% group_by(販売エリア, 分類) %>%
tally() %>%
spread(key = 販売エリア, value = n)
sales %>% count(販売エリア, 分類) %>% view(
sales %>% count(販売エリア, 分類) %>% view()
sales %>% count(販売エリア, 分類) %>% view()
# (32) 変数"顧客名"と変数"商品名"のクロス集計表を作成し、セルに合計金額を表示
sales %>% group_by(顧客名,商品名) %>%
summarise(合計金額, sum(金額)) %>%
tally() %>%
spread(key = 顧客名, value = 合計金額)
# (32) 変数"顧客名"と変数"商品名"のクロス集計表を作成し、セルに合計金額を表示
sales %>% group_by(顧客名,商品名) %>%
summarise(合計金額 = sum(金額)) %>%
tally() %>%
spread(key = 顧客名, value = 合計金額)
# ------------------------------------------------------------------------------------------
# 解答例
# ------------------------------------------------------------------------------------------
# データ読み込み(ファイルパスは書き換えてください)
titanic <- read_csv("titanic.csv")
# (32) 変数"顧客名"と変数"商品名"のクロス集計表を作成し、セルに合計金額を表示
sales %>% group_by(顧客名,商品名) %>%
summarise(合計金額 = sum(金額)) %>%
tally() %>%
spread(key = 顧客名, value = 合計金額)
sales %>% group_by(顧客名,商品名) %>%
summarise(合計金額 = sum(金額)) %>% view()
# (32) 変数"顧客名"と変数"商品名"のクロス集計表を作成し、セルに合計金額を表示
sales %>% group_by(顧客名,商品名) %>%
summarise(合計金額 = sum(金額)) %>%
spread(key = 顧客名, value = 合計金額)
mutate_at(vars(-商品名), funs(ifelse(is.na(.),0,.)))
mutate_at(vars(-商品名), funs(ifelse(is.na(.),0,.)))
# (32) 変数"顧客名"と変数"商品名"のクロス集計表を作成し、セルに合計金額を表示
sales %>% group_by(顧客名,商品名) %>%
summarise(合計金額 = sum(金額)) %>%
spread(key = 顧客名, value = 合計金額) %>%
mutate_at(vars(-商品名), funs(ifelse(is.na(.),0,.)))
# (33) 変数"販売エリア"と変数"分類"のクロス集計表を作成し、セルに合計金額を表示
sales %>% group_by(販売エリア,分類) %>%
summarise(sum = sum(金額)) %>%
spread(key = 分類, value = sum) %>%
mutate_at(vars(-販売エリア), funs(ifelse(is.na(.),0,.)))
titanic <- read_csv("/Users/yoshikawahiroshi/Documents/R_lesson_tidyverse/R_lesson_3rd/titanic.csv")
# (2) 変数Name、Age、Sexを抽出する
titanic %>%
select(name, Age, Sex)
# (2) 変数Name、Age、Sexを抽出する
titanic %>%
select(name, Age, Sex)
View(titanic)
# (2) 変数Name、Age、Sexを抽出する
titanic %>%
select(name, Age, Sex)
# (2) 変数Name、Age、Sexを抽出する
titanic %>%
select(Name, Age, Sex)
# (3) 変数Ticket、Fare、Cabin、Embarkedを削除
titanic %>%
select(-Ticket, -Fare, -Cabin, =Embarked)
# (3) 変数Ticket、Fare、Cabin、Embarkedを削除
titanic %>%
select(-Ticket, -Fare, -Cabin, -Embarked)
# (4) 変数名がPで始まる変数を抽出
titanic %>%
select(start_with(p))
# (4) 変数名がPで始まる変数を抽出
titanic %>%
select(starts_with(p))
# (4) 変数名がPで始まる変数を抽出
titanic %>%
select(starts_with(p))
# (4) 変数名がPで始まる変数を抽出
titanic %>%
select(starts_with(P))
# (4) 変数名がPで始まる変数を抽出
titanic %>%
select(starts_with("P"))
# (5) 変数名がdで終わる変数を抽出
titanic %>%
select(ends_with("d"))
# (6) 変数名にOrを含む変数を抽出
titanic %>%
select(contains("Or"))
# (7) 変数Name、Age、Sexを最初(1列～3列)に配置
titanic %>%
select(Name, Age, Sex, everything())
# (8) 変数ChiOrAdを抽出し、x1に名前を変更
titanic %>%
select(x1 = ChiOrAd)
titanic %>%
select(x1 = ChiOrAd)
# (9) 変数名がdで終わる変数を抽出し、x〇〇に名前を変更(〇〇は連番)
titanic %>%
select(x = ends_with(d))
# (9) 変数名がdで終わる変数を抽出し、x〇〇に名前を変更(〇〇は連番)
titanic %>%
select(x = ends_with("d"))
# (10) 変数Ageの変数名を年齢に変更(その他の変数はそのまま残す)
titanic %>%
select(年齢 = Age)
