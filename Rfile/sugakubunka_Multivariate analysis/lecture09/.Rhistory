# psychパッケージの読み込み
library(psych)
# データの読み込み
dat <- read.csv("./data/ramen.csv", fileEncoding = "cp932", row.names = "店名")
dat
result_varimax <- fa(dat, nfactors = 2, fm = "ml", rotate = "varimax")
print(result_varimax$loadings, cutoff = 0)
# 目標行列を求める
x <- result_varimax$loadings
Q <- x * abs(x)^3    # 符号を保つためにabs^3にした。
print(Q, cutoff = 0)
# バリマックス回転解に掛ける行列の求め方（仕組み）
u <- data.frame(f1_load = x[, 1], f2_load = x[, 2], q = Q[,1])
lm(q ~ 0+f1_load+f2_load, data = u)
# バリマックス回転解に掛ける行列の求め方（結果）
U <- lm.fit(x, Q)$coefficients    # Qの各列に対して切片0の線形回帰を行う。
U
# x%*%Uを因子負荷行列にすると因子得点の標準偏差が1にならない。
d <- diag(solve(t(U)%*%U))    # 因子得点の標準偏差を1にするためのスケーリングを求める。
x %*% U %*% diag(sqrt(d))
result_promax <- fa(dat, nfactors = 2, fm = "ml", rotate = "Promax")
print(result_promax$loadings, cutoff = 0)
dat <- read.csv("./data/mtcars_numeric.csv",
fileEncoding = "utf-8",
row.names = "model")
head(dat, n = 5)
library(corrplot)
cormat <- cor(dat)    # 相関行列の計算
corrplot(cormat)    # ヒートマップの作成
# 2因子モデル
result <- fa(dat, nfactors = 2, fm = "ml", rotate = "Promax")
result <- fa.sort(result)    # 因子負荷量の絶対値が高い順にソート
result$loadings    # サーストンの単純構造が得られている
result$communalities
# 因子間相関
result$Phi
# 因子得点の散布図
par(family = "ヒラギノ角ゴシック W3")   # Macユーザーのみ
plot(result$scores, type = "n")
text(result$scores, labels=rownames(dat), cex = 0.7)
# 因子得点の散布図
par(family = "ヒラギノ角ゴシック W3")   # Macユーザーのみ
plot(result$scores, type = "n")
text(result$scores, labels=rownames(dat), cex = 0.7)
