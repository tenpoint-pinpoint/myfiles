library("tidyverse")

##バイアスのないデータをt検定

email_data <- read_csv("http://www.minethatdata.com/Kevin_Hillstrom_MineThatData_E-MailAnalytics_DataMiningChallenge_2008.03.20.csv")

head(email_data)
nrow(distinct(email_data,spend))


male_df <- email_data %>%
  filter(segment != "Womens E-Mail") %>%
  mutate(treatment = if_else(segment == "Mens E-Mail",1,0))

head(male_df)

summary_by_segment <- male_df %>%
  group_by(treatment) %>%
  summarise(conversion_rate = mean(conversion),
            spend_mean = mean(spend),
            count = n())

#t検定
mens_mail <- male_df %>%
  filter(treatment == 1 ) %>%
  pull(spend)

no_mail <- male_df %>%
  filter(treatment == 0 ) %>%
  pull(spend)

rct_ttest <- t.test(mens_mail, no_mail, var.equal = TRUE)

rct_ttest


#バイアスのあるデータを発生させt検定
set.seed(1)       #乱数シードを発生
obs_rate_c <- 0.5
obs_rate_t <- 0.5 #条件に反応するサンプルを半分にする
biased_data <- male_df %>%
  mutate(obs_rate_c = if_else((history > 300)|(recency < 6)|(channel=="Multichannel"),obs_rate_c,1),
         obs_rate_t = if_else((history > 300)|(recency < 6)|(channel=="Multichannel"),1,obs_rate_t),
         random_number = runif(n = NROW(male_df))) %>% #runifはデフォルトではmin=0,max=1になっている
  filter((treatment == 0 & random_number < obs_rate_c)|(treatment == 1 & random_number < obs_rate_t))
         
biased_data

summary_by_segment_biased <- biased_data %>%
  group_by(treatment) %>%
  summarise(conversion_rate = mean(conversion),
            spend_mean = mean(spend),
            count = n())

mens_mail_biased <- biased_data %>%
  filter(treatment == 1 ) %>%
  pull(spend)

no_mail_biased <- biased_data %>%
  filter(treatment == 0 ) %>%
  pull(spend)

rct_ttest_biased <- t.test(mens_mail_biased, no_mail_biased, var.equal = TRUE)

rct_ttest_biased

